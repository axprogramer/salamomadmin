{
  "version": 3,
  "sources": ["../../fast-diff/diff.js", "../../prettier-linter-helpers/index.js", "../../eslint-plugin-prettier/package.json", "browser-external:node:crypto", "browser-external:node:fs", "browser-external:node:module", "browser-external:node:path", "browser-external:node:url", "browser-external:node:worker_threads", "../../@pkgr/core/lib/index.cjs", "../../synckit/lib/index.cjs", "../../eslint-plugin-prettier/eslint-plugin-prettier.js"],
  "sourcesContent": ["/**\n * This library modifies the diff-patch-match library by Neil Fraser\n * by removing the patch and match functionality and certain advanced\n * options in the diff function. The original license is as follows:\n *\n * ===\n *\n * Diff Match and Patch\n *\n * Copyright 2006 Google Inc.\n * http://code.google.com/p/google-diff-match-patch/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The data structure representing a diff is an array of tuples:\n * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]\n * which means: delete 'Hello', add 'Goodbye' and keep ' world.'\n */\nvar DIFF_DELETE = -1;\nvar DIFF_INSERT = 1;\nvar DIFF_EQUAL = 0;\n\n/**\n * Find the differences between two texts.  Simplifies the problem by stripping\n * any common prefix or suffix off the texts before diffing.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {Int|Object} [cursor_pos] Edit position in text1 or object with more info\n * @param {boolean} [cleanup] Apply semantic cleanup before returning.\n * @return {Array} Array of diff tuples.\n */\nfunction diff_main(text1, text2, cursor_pos, cleanup, _fix_unicode) {\n  // Check for equality\n  if (text1 === text2) {\n    if (text1) {\n      return [[DIFF_EQUAL, text1]];\n    }\n    return [];\n  }\n\n  if (cursor_pos != null) {\n    var editdiff = find_cursor_edit_diff(text1, text2, cursor_pos);\n    if (editdiff) {\n      return editdiff;\n    }\n  }\n\n  // Trim off common prefix (speedup).\n  var commonlength = diff_commonPrefix(text1, text2);\n  var commonprefix = text1.substring(0, commonlength);\n  text1 = text1.substring(commonlength);\n  text2 = text2.substring(commonlength);\n\n  // Trim off common suffix (speedup).\n  commonlength = diff_commonSuffix(text1, text2);\n  var commonsuffix = text1.substring(text1.length - commonlength);\n  text1 = text1.substring(0, text1.length - commonlength);\n  text2 = text2.substring(0, text2.length - commonlength);\n\n  // Compute the diff on the middle block.\n  var diffs = diff_compute_(text1, text2);\n\n  // Restore the prefix and suffix.\n  if (commonprefix) {\n    diffs.unshift([DIFF_EQUAL, commonprefix]);\n  }\n  if (commonsuffix) {\n    diffs.push([DIFF_EQUAL, commonsuffix]);\n  }\n  diff_cleanupMerge(diffs, _fix_unicode);\n  if (cleanup) {\n    diff_cleanupSemantic(diffs);\n  }\n  return diffs;\n}\n\n/**\n * Find the differences between two texts.  Assumes that the texts do not\n * have any common prefix or suffix.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @return {Array} Array of diff tuples.\n */\nfunction diff_compute_(text1, text2) {\n  var diffs;\n\n  if (!text1) {\n    // Just add some text (speedup).\n    return [[DIFF_INSERT, text2]];\n  }\n\n  if (!text2) {\n    // Just delete some text (speedup).\n    return [[DIFF_DELETE, text1]];\n  }\n\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  var i = longtext.indexOf(shorttext);\n  if (i !== -1) {\n    // Shorter text is inside the longer text (speedup).\n    diffs = [\n      [DIFF_INSERT, longtext.substring(0, i)],\n      [DIFF_EQUAL, shorttext],\n      [DIFF_INSERT, longtext.substring(i + shorttext.length)],\n    ];\n    // Swap insertions for deletions if diff is reversed.\n    if (text1.length > text2.length) {\n      diffs[0][0] = diffs[2][0] = DIFF_DELETE;\n    }\n    return diffs;\n  }\n\n  if (shorttext.length === 1) {\n    // Single character string.\n    // After the previous speedup, the character can't be an equality.\n    return [\n      [DIFF_DELETE, text1],\n      [DIFF_INSERT, text2],\n    ];\n  }\n\n  // Check to see if the problem can be split in two.\n  var hm = diff_halfMatch_(text1, text2);\n  if (hm) {\n    // A half-match was found, sort out the return data.\n    var text1_a = hm[0];\n    var text1_b = hm[1];\n    var text2_a = hm[2];\n    var text2_b = hm[3];\n    var mid_common = hm[4];\n    // Send both pairs off for separate processing.\n    var diffs_a = diff_main(text1_a, text2_a);\n    var diffs_b = diff_main(text1_b, text2_b);\n    // Merge the results.\n    return diffs_a.concat([[DIFF_EQUAL, mid_common]], diffs_b);\n  }\n\n  return diff_bisect_(text1, text2);\n}\n\n/**\n * Find the 'middle snake' of a diff, split the problem in two\n * and return the recursively constructed diff.\n * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @return {Array} Array of diff tuples.\n * @private\n */\nfunction diff_bisect_(text1, text2) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  var max_d = Math.ceil((text1_length + text2_length) / 2);\n  var v_offset = max_d;\n  var v_length = 2 * max_d;\n  var v1 = new Array(v_length);\n  var v2 = new Array(v_length);\n  // Setting all elements to -1 is faster in Chrome & Firefox than mixing\n  // integers and undefined.\n  for (var x = 0; x < v_length; x++) {\n    v1[x] = -1;\n    v2[x] = -1;\n  }\n  v1[v_offset + 1] = 0;\n  v2[v_offset + 1] = 0;\n  var delta = text1_length - text2_length;\n  // If the total number of characters is odd, then the front path will collide\n  // with the reverse path.\n  var front = delta % 2 !== 0;\n  // Offsets for start and end of k loop.\n  // Prevents mapping of space beyond the grid.\n  var k1start = 0;\n  var k1end = 0;\n  var k2start = 0;\n  var k2end = 0;\n  for (var d = 0; d < max_d; d++) {\n    // Walk the front path one step.\n    for (var k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {\n      var k1_offset = v_offset + k1;\n      var x1;\n      if (k1 === -d || (k1 !== d && v1[k1_offset - 1] < v1[k1_offset + 1])) {\n        x1 = v1[k1_offset + 1];\n      } else {\n        x1 = v1[k1_offset - 1] + 1;\n      }\n      var y1 = x1 - k1;\n      while (\n        x1 < text1_length &&\n        y1 < text2_length &&\n        text1.charAt(x1) === text2.charAt(y1)\n      ) {\n        x1++;\n        y1++;\n      }\n      v1[k1_offset] = x1;\n      if (x1 > text1_length) {\n        // Ran off the right of the graph.\n        k1end += 2;\n      } else if (y1 > text2_length) {\n        // Ran off the bottom of the graph.\n        k1start += 2;\n      } else if (front) {\n        var k2_offset = v_offset + delta - k1;\n        if (k2_offset >= 0 && k2_offset < v_length && v2[k2_offset] !== -1) {\n          // Mirror x2 onto top-left coordinate system.\n          var x2 = text1_length - v2[k2_offset];\n          if (x1 >= x2) {\n            // Overlap detected.\n            return diff_bisectSplit_(text1, text2, x1, y1);\n          }\n        }\n      }\n    }\n\n    // Walk the reverse path one step.\n    for (var k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {\n      var k2_offset = v_offset + k2;\n      var x2;\n      if (k2 === -d || (k2 !== d && v2[k2_offset - 1] < v2[k2_offset + 1])) {\n        x2 = v2[k2_offset + 1];\n      } else {\n        x2 = v2[k2_offset - 1] + 1;\n      }\n      var y2 = x2 - k2;\n      while (\n        x2 < text1_length &&\n        y2 < text2_length &&\n        text1.charAt(text1_length - x2 - 1) ===\n          text2.charAt(text2_length - y2 - 1)\n      ) {\n        x2++;\n        y2++;\n      }\n      v2[k2_offset] = x2;\n      if (x2 > text1_length) {\n        // Ran off the left of the graph.\n        k2end += 2;\n      } else if (y2 > text2_length) {\n        // Ran off the top of the graph.\n        k2start += 2;\n      } else if (!front) {\n        var k1_offset = v_offset + delta - k2;\n        if (k1_offset >= 0 && k1_offset < v_length && v1[k1_offset] !== -1) {\n          var x1 = v1[k1_offset];\n          var y1 = v_offset + x1 - k1_offset;\n          // Mirror x2 onto top-left coordinate system.\n          x2 = text1_length - x2;\n          if (x1 >= x2) {\n            // Overlap detected.\n            return diff_bisectSplit_(text1, text2, x1, y1);\n          }\n        }\n      }\n    }\n  }\n  // Diff took too long and hit the deadline or\n  // number of diffs equals number of characters, no commonality at all.\n  return [\n    [DIFF_DELETE, text1],\n    [DIFF_INSERT, text2],\n  ];\n}\n\n/**\n * Given the location of the 'middle snake', split the diff in two parts\n * and recurse.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} x Index of split point in text1.\n * @param {number} y Index of split point in text2.\n * @return {Array} Array of diff tuples.\n */\nfunction diff_bisectSplit_(text1, text2, x, y) {\n  var text1a = text1.substring(0, x);\n  var text2a = text2.substring(0, y);\n  var text1b = text1.substring(x);\n  var text2b = text2.substring(y);\n\n  // Compute both diffs serially.\n  var diffs = diff_main(text1a, text2a);\n  var diffsb = diff_main(text1b, text2b);\n\n  return diffs.concat(diffsb);\n}\n\n/**\n * Determine the common prefix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the start of each\n *     string.\n */\nfunction diff_commonPrefix(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.charAt(0) !== text2.charAt(0)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerstart = 0;\n  while (pointermin < pointermid) {\n    if (\n      text1.substring(pointerstart, pointermid) ==\n      text2.substring(pointerstart, pointermid)\n    ) {\n      pointermin = pointermid;\n      pointerstart = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n\n  if (is_surrogate_pair_start(text1.charCodeAt(pointermid - 1))) {\n    pointermid--;\n  }\n\n  return pointermid;\n}\n\n/**\n * Determine if the suffix of one string is the prefix of another.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of the first\n *     string and the start of the second string.\n * @private\n */\nfunction diff_commonOverlap_(text1, text2) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  // Eliminate the null case.\n  if (text1_length == 0 || text2_length == 0) {\n    return 0;\n  }\n  // Truncate the longer string.\n  if (text1_length > text2_length) {\n    text1 = text1.substring(text1_length - text2_length);\n  } else if (text1_length < text2_length) {\n    text2 = text2.substring(0, text1_length);\n  }\n  var text_length = Math.min(text1_length, text2_length);\n  // Quick check for the worst case.\n  if (text1 == text2) {\n    return text_length;\n  }\n\n  // Start by looking for a single character match\n  // and increase length until no match is found.\n  // Performance analysis: http://neil.fraser.name/news/2010/11/04/\n  var best = 0;\n  var length = 1;\n  while (true) {\n    var pattern = text1.substring(text_length - length);\n    var found = text2.indexOf(pattern);\n    if (found == -1) {\n      return best;\n    }\n    length += found;\n    if (\n      found == 0 ||\n      text1.substring(text_length - length) == text2.substring(0, length)\n    ) {\n      best = length;\n      length++;\n    }\n  }\n}\n\n/**\n * Determine the common suffix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of each string.\n */\nfunction diff_commonSuffix(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.slice(-1) !== text2.slice(-1)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerend = 0;\n  while (pointermin < pointermid) {\n    if (\n      text1.substring(text1.length - pointermid, text1.length - pointerend) ==\n      text2.substring(text2.length - pointermid, text2.length - pointerend)\n    ) {\n      pointermin = pointermid;\n      pointerend = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n\n  if (is_surrogate_pair_end(text1.charCodeAt(text1.length - pointermid))) {\n    pointermid--;\n  }\n\n  return pointermid;\n}\n\n/**\n * Do the two texts share a substring which is at least half the length of the\n * longer text?\n * This speedup can produce non-minimal diffs.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {Array.<string>} Five element Array, containing the prefix of\n *     text1, the suffix of text1, the prefix of text2, the suffix of\n *     text2 and the common middle.  Or null if there was no match.\n */\nfunction diff_halfMatch_(text1, text2) {\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  if (longtext.length < 4 || shorttext.length * 2 < longtext.length) {\n    return null; // Pointless.\n  }\n\n  /**\n   * Does a substring of shorttext exist within longtext such that the substring\n   * is at least half the length of longtext?\n   * Closure, but does not reference any external variables.\n   * @param {string} longtext Longer string.\n   * @param {string} shorttext Shorter string.\n   * @param {number} i Start index of quarter length substring within longtext.\n   * @return {Array.<string>} Five element Array, containing the prefix of\n   *     longtext, the suffix of longtext, the prefix of shorttext, the suffix\n   *     of shorttext and the common middle.  Or null if there was no match.\n   * @private\n   */\n  function diff_halfMatchI_(longtext, shorttext, i) {\n    // Start with a 1/4 length substring at position i as a seed.\n    var seed = longtext.substring(i, i + Math.floor(longtext.length / 4));\n    var j = -1;\n    var best_common = \"\";\n    var best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b;\n    while ((j = shorttext.indexOf(seed, j + 1)) !== -1) {\n      var prefixLength = diff_commonPrefix(\n        longtext.substring(i),\n        shorttext.substring(j)\n      );\n      var suffixLength = diff_commonSuffix(\n        longtext.substring(0, i),\n        shorttext.substring(0, j)\n      );\n      if (best_common.length < suffixLength + prefixLength) {\n        best_common =\n          shorttext.substring(j - suffixLength, j) +\n          shorttext.substring(j, j + prefixLength);\n        best_longtext_a = longtext.substring(0, i - suffixLength);\n        best_longtext_b = longtext.substring(i + prefixLength);\n        best_shorttext_a = shorttext.substring(0, j - suffixLength);\n        best_shorttext_b = shorttext.substring(j + prefixLength);\n      }\n    }\n    if (best_common.length * 2 >= longtext.length) {\n      return [\n        best_longtext_a,\n        best_longtext_b,\n        best_shorttext_a,\n        best_shorttext_b,\n        best_common,\n      ];\n    } else {\n      return null;\n    }\n  }\n\n  // First check if the second quarter is the seed for a half-match.\n  var hm1 = diff_halfMatchI_(\n    longtext,\n    shorttext,\n    Math.ceil(longtext.length / 4)\n  );\n  // Check again based on the third quarter.\n  var hm2 = diff_halfMatchI_(\n    longtext,\n    shorttext,\n    Math.ceil(longtext.length / 2)\n  );\n  var hm;\n  if (!hm1 && !hm2) {\n    return null;\n  } else if (!hm2) {\n    hm = hm1;\n  } else if (!hm1) {\n    hm = hm2;\n  } else {\n    // Both matched.  Select the longest.\n    hm = hm1[4].length > hm2[4].length ? hm1 : hm2;\n  }\n\n  // A half-match was found, sort out the return data.\n  var text1_a, text1_b, text2_a, text2_b;\n  if (text1.length > text2.length) {\n    text1_a = hm[0];\n    text1_b = hm[1];\n    text2_a = hm[2];\n    text2_b = hm[3];\n  } else {\n    text2_a = hm[0];\n    text2_b = hm[1];\n    text1_a = hm[2];\n    text1_b = hm[3];\n  }\n  var mid_common = hm[4];\n  return [text1_a, text1_b, text2_a, text2_b, mid_common];\n}\n\n/**\n * Reduce the number of edits by eliminating semantically trivial equalities.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\nfunction diff_cleanupSemantic(diffs) {\n  var changes = false;\n  var equalities = []; // Stack of indices where equalities are found.\n  var equalitiesLength = 0; // Keeping our own length var is faster in JS.\n  /** @type {?string} */\n  var lastequality = null;\n  // Always equal to diffs[equalities[equalitiesLength - 1]][1]\n  var pointer = 0; // Index of current position.\n  // Number of characters that changed prior to the equality.\n  var length_insertions1 = 0;\n  var length_deletions1 = 0;\n  // Number of characters that changed after the equality.\n  var length_insertions2 = 0;\n  var length_deletions2 = 0;\n  while (pointer < diffs.length) {\n    if (diffs[pointer][0] == DIFF_EQUAL) {\n      // Equality found.\n      equalities[equalitiesLength++] = pointer;\n      length_insertions1 = length_insertions2;\n      length_deletions1 = length_deletions2;\n      length_insertions2 = 0;\n      length_deletions2 = 0;\n      lastequality = diffs[pointer][1];\n    } else {\n      // An insertion or deletion.\n      if (diffs[pointer][0] == DIFF_INSERT) {\n        length_insertions2 += diffs[pointer][1].length;\n      } else {\n        length_deletions2 += diffs[pointer][1].length;\n      }\n      // Eliminate an equality that is smaller or equal to the edits on both\n      // sides of it.\n      if (\n        lastequality &&\n        lastequality.length <=\n          Math.max(length_insertions1, length_deletions1) &&\n        lastequality.length <= Math.max(length_insertions2, length_deletions2)\n      ) {\n        // Duplicate record.\n        diffs.splice(equalities[equalitiesLength - 1], 0, [\n          DIFF_DELETE,\n          lastequality,\n        ]);\n        // Change second copy to insert.\n        diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT;\n        // Throw away the equality we just deleted.\n        equalitiesLength--;\n        // Throw away the previous equality (it needs to be reevaluated).\n        equalitiesLength--;\n        pointer = equalitiesLength > 0 ? equalities[equalitiesLength - 1] : -1;\n        length_insertions1 = 0; // Reset the counters.\n        length_deletions1 = 0;\n        length_insertions2 = 0;\n        length_deletions2 = 0;\n        lastequality = null;\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n\n  // Normalize the diff.\n  if (changes) {\n    diff_cleanupMerge(diffs);\n  }\n  diff_cleanupSemanticLossless(diffs);\n\n  // Find any overlaps between deletions and insertions.\n  // e.g: <del>abcxxx</del><ins>xxxdef</ins>\n  //   -> <del>abc</del>xxx<ins>def</ins>\n  // e.g: <del>xxxabc</del><ins>defxxx</ins>\n  //   -> <ins>def</ins>xxx<del>abc</del>\n  // Only extract an overlap if it is as big as the edit ahead or behind it.\n  pointer = 1;\n  while (pointer < diffs.length) {\n    if (\n      diffs[pointer - 1][0] == DIFF_DELETE &&\n      diffs[pointer][0] == DIFF_INSERT\n    ) {\n      var deletion = diffs[pointer - 1][1];\n      var insertion = diffs[pointer][1];\n      var overlap_length1 = diff_commonOverlap_(deletion, insertion);\n      var overlap_length2 = diff_commonOverlap_(insertion, deletion);\n      if (overlap_length1 >= overlap_length2) {\n        if (\n          overlap_length1 >= deletion.length / 2 ||\n          overlap_length1 >= insertion.length / 2\n        ) {\n          // Overlap found.  Insert an equality and trim the surrounding edits.\n          diffs.splice(pointer, 0, [\n            DIFF_EQUAL,\n            insertion.substring(0, overlap_length1),\n          ]);\n          diffs[pointer - 1][1] = deletion.substring(\n            0,\n            deletion.length - overlap_length1\n          );\n          diffs[pointer + 1][1] = insertion.substring(overlap_length1);\n          pointer++;\n        }\n      } else {\n        if (\n          overlap_length2 >= deletion.length / 2 ||\n          overlap_length2 >= insertion.length / 2\n        ) {\n          // Reverse overlap found.\n          // Insert an equality and swap and trim the surrounding edits.\n          diffs.splice(pointer, 0, [\n            DIFF_EQUAL,\n            deletion.substring(0, overlap_length2),\n          ]);\n          diffs[pointer - 1][0] = DIFF_INSERT;\n          diffs[pointer - 1][1] = insertion.substring(\n            0,\n            insertion.length - overlap_length2\n          );\n          diffs[pointer + 1][0] = DIFF_DELETE;\n          diffs[pointer + 1][1] = deletion.substring(overlap_length2);\n          pointer++;\n        }\n      }\n      pointer++;\n    }\n    pointer++;\n  }\n}\n\nvar nonAlphaNumericRegex_ = /[^a-zA-Z0-9]/;\nvar whitespaceRegex_ = /\\s/;\nvar linebreakRegex_ = /[\\r\\n]/;\nvar blanklineEndRegex_ = /\\n\\r?\\n$/;\nvar blanklineStartRegex_ = /^\\r?\\n\\r?\\n/;\n\n/**\n * Look for single edits surrounded on both sides by equalities\n * which can be shifted sideways to align the edit to a word boundary.\n * e.g: The c<ins>at c</ins>ame. -> The <ins>cat </ins>came.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\nfunction diff_cleanupSemanticLossless(diffs) {\n  /**\n   * Given two strings, compute a score representing whether the internal\n   * boundary falls on logical boundaries.\n   * Scores range from 6 (best) to 0 (worst).\n   * Closure, but does not reference any external variables.\n   * @param {string} one First string.\n   * @param {string} two Second string.\n   * @return {number} The score.\n   * @private\n   */\n  function diff_cleanupSemanticScore_(one, two) {\n    if (!one || !two) {\n      // Edges are the best.\n      return 6;\n    }\n\n    // Each port of this function behaves slightly differently due to\n    // subtle differences in each language's definition of things like\n    // 'whitespace'.  Since this function's purpose is largely cosmetic,\n    // the choice has been made to use each language's native features\n    // rather than force total conformity.\n    var char1 = one.charAt(one.length - 1);\n    var char2 = two.charAt(0);\n    var nonAlphaNumeric1 = char1.match(nonAlphaNumericRegex_);\n    var nonAlphaNumeric2 = char2.match(nonAlphaNumericRegex_);\n    var whitespace1 = nonAlphaNumeric1 && char1.match(whitespaceRegex_);\n    var whitespace2 = nonAlphaNumeric2 && char2.match(whitespaceRegex_);\n    var lineBreak1 = whitespace1 && char1.match(linebreakRegex_);\n    var lineBreak2 = whitespace2 && char2.match(linebreakRegex_);\n    var blankLine1 = lineBreak1 && one.match(blanklineEndRegex_);\n    var blankLine2 = lineBreak2 && two.match(blanklineStartRegex_);\n\n    if (blankLine1 || blankLine2) {\n      // Five points for blank lines.\n      return 5;\n    } else if (lineBreak1 || lineBreak2) {\n      // Four points for line breaks.\n      return 4;\n    } else if (nonAlphaNumeric1 && !whitespace1 && whitespace2) {\n      // Three points for end of sentences.\n      return 3;\n    } else if (whitespace1 || whitespace2) {\n      // Two points for whitespace.\n      return 2;\n    } else if (nonAlphaNumeric1 || nonAlphaNumeric2) {\n      // One point for non-alphanumeric.\n      return 1;\n    }\n    return 0;\n  }\n\n  var pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (\n      diffs[pointer - 1][0] == DIFF_EQUAL &&\n      diffs[pointer + 1][0] == DIFF_EQUAL\n    ) {\n      // This is a single edit surrounded by equalities.\n      var equality1 = diffs[pointer - 1][1];\n      var edit = diffs[pointer][1];\n      var equality2 = diffs[pointer + 1][1];\n\n      // First, shift the edit as far left as possible.\n      var commonOffset = diff_commonSuffix(equality1, edit);\n      if (commonOffset) {\n        var commonString = edit.substring(edit.length - commonOffset);\n        equality1 = equality1.substring(0, equality1.length - commonOffset);\n        edit = commonString + edit.substring(0, edit.length - commonOffset);\n        equality2 = commonString + equality2;\n      }\n\n      // Second, step character by character right, looking for the best fit.\n      var bestEquality1 = equality1;\n      var bestEdit = edit;\n      var bestEquality2 = equality2;\n      var bestScore =\n        diff_cleanupSemanticScore_(equality1, edit) +\n        diff_cleanupSemanticScore_(edit, equality2);\n      while (edit.charAt(0) === equality2.charAt(0)) {\n        equality1 += edit.charAt(0);\n        edit = edit.substring(1) + equality2.charAt(0);\n        equality2 = equality2.substring(1);\n        var score =\n          diff_cleanupSemanticScore_(equality1, edit) +\n          diff_cleanupSemanticScore_(edit, equality2);\n        // The >= encourages trailing rather than leading whitespace on edits.\n        if (score >= bestScore) {\n          bestScore = score;\n          bestEquality1 = equality1;\n          bestEdit = edit;\n          bestEquality2 = equality2;\n        }\n      }\n\n      if (diffs[pointer - 1][1] != bestEquality1) {\n        // We have an improvement, save it back to the diff.\n        if (bestEquality1) {\n          diffs[pointer - 1][1] = bestEquality1;\n        } else {\n          diffs.splice(pointer - 1, 1);\n          pointer--;\n        }\n        diffs[pointer][1] = bestEdit;\n        if (bestEquality2) {\n          diffs[pointer + 1][1] = bestEquality2;\n        } else {\n          diffs.splice(pointer + 1, 1);\n          pointer--;\n        }\n      }\n    }\n    pointer++;\n  }\n}\n\n/**\n * Reorder and merge like edit sections.  Merge equalities.\n * Any edit section can move as long as it doesn't cross an equality.\n * @param {Array} diffs Array of diff tuples.\n * @param {boolean} fix_unicode Whether to normalize to a unicode-correct diff\n */\nfunction diff_cleanupMerge(diffs, fix_unicode) {\n  diffs.push([DIFF_EQUAL, \"\"]); // Add a dummy entry at the end.\n  var pointer = 0;\n  var count_delete = 0;\n  var count_insert = 0;\n  var text_delete = \"\";\n  var text_insert = \"\";\n  var commonlength;\n  while (pointer < diffs.length) {\n    if (pointer < diffs.length - 1 && !diffs[pointer][1]) {\n      diffs.splice(pointer, 1);\n      continue;\n    }\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n        count_insert++;\n        text_insert += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_DELETE:\n        count_delete++;\n        text_delete += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_EQUAL:\n        var previous_equality = pointer - count_insert - count_delete - 1;\n        if (fix_unicode) {\n          // prevent splitting of unicode surrogate pairs.  when fix_unicode is true,\n          // we assume that the old and new text in the diff are complete and correct\n          // unicode-encoded JS strings, but the tuple boundaries may fall between\n          // surrogate pairs.  we fix this by shaving off stray surrogates from the end\n          // of the previous equality and the beginning of this equality.  this may create\n          // empty equalities or a common prefix or suffix.  for example, if AB and AC are\n          // emojis, `[[0, 'A'], [-1, 'BA'], [0, 'C']]` would turn into deleting 'ABAC' and\n          // inserting 'AC', and then the common suffix 'AC' will be eliminated.  in this\n          // particular case, both equalities go away, we absorb any previous inequalities,\n          // and we keep scanning for the next equality before rewriting the tuples.\n          if (\n            previous_equality >= 0 &&\n            ends_with_pair_start(diffs[previous_equality][1])\n          ) {\n            var stray = diffs[previous_equality][1].slice(-1);\n            diffs[previous_equality][1] = diffs[previous_equality][1].slice(\n              0,\n              -1\n            );\n            text_delete = stray + text_delete;\n            text_insert = stray + text_insert;\n            if (!diffs[previous_equality][1]) {\n              // emptied out previous equality, so delete it and include previous delete/insert\n              diffs.splice(previous_equality, 1);\n              pointer--;\n              var k = previous_equality - 1;\n              if (diffs[k] && diffs[k][0] === DIFF_INSERT) {\n                count_insert++;\n                text_insert = diffs[k][1] + text_insert;\n                k--;\n              }\n              if (diffs[k] && diffs[k][0] === DIFF_DELETE) {\n                count_delete++;\n                text_delete = diffs[k][1] + text_delete;\n                k--;\n              }\n              previous_equality = k;\n            }\n          }\n          if (starts_with_pair_end(diffs[pointer][1])) {\n            var stray = diffs[pointer][1].charAt(0);\n            diffs[pointer][1] = diffs[pointer][1].slice(1);\n            text_delete += stray;\n            text_insert += stray;\n          }\n        }\n        if (pointer < diffs.length - 1 && !diffs[pointer][1]) {\n          // for empty equality not at end, wait for next equality\n          diffs.splice(pointer, 1);\n          break;\n        }\n        if (text_delete.length > 0 || text_insert.length > 0) {\n          // note that diff_commonPrefix and diff_commonSuffix are unicode-aware\n          if (text_delete.length > 0 && text_insert.length > 0) {\n            // Factor out any common prefixes.\n            commonlength = diff_commonPrefix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              if (previous_equality >= 0) {\n                diffs[previous_equality][1] += text_insert.substring(\n                  0,\n                  commonlength\n                );\n              } else {\n                diffs.splice(0, 0, [\n                  DIFF_EQUAL,\n                  text_insert.substring(0, commonlength),\n                ]);\n                pointer++;\n              }\n              text_insert = text_insert.substring(commonlength);\n              text_delete = text_delete.substring(commonlength);\n            }\n            // Factor out any common suffixes.\n            commonlength = diff_commonSuffix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              diffs[pointer][1] =\n                text_insert.substring(text_insert.length - commonlength) +\n                diffs[pointer][1];\n              text_insert = text_insert.substring(\n                0,\n                text_insert.length - commonlength\n              );\n              text_delete = text_delete.substring(\n                0,\n                text_delete.length - commonlength\n              );\n            }\n          }\n          // Delete the offending records and add the merged ones.\n          var n = count_insert + count_delete;\n          if (text_delete.length === 0 && text_insert.length === 0) {\n            diffs.splice(pointer - n, n);\n            pointer = pointer - n;\n          } else if (text_delete.length === 0) {\n            diffs.splice(pointer - n, n, [DIFF_INSERT, text_insert]);\n            pointer = pointer - n + 1;\n          } else if (text_insert.length === 0) {\n            diffs.splice(pointer - n, n, [DIFF_DELETE, text_delete]);\n            pointer = pointer - n + 1;\n          } else {\n            diffs.splice(\n              pointer - n,\n              n,\n              [DIFF_DELETE, text_delete],\n              [DIFF_INSERT, text_insert]\n            );\n            pointer = pointer - n + 2;\n          }\n        }\n        if (pointer !== 0 && diffs[pointer - 1][0] === DIFF_EQUAL) {\n          // Merge this equality with the previous one.\n          diffs[pointer - 1][1] += diffs[pointer][1];\n          diffs.splice(pointer, 1);\n        } else {\n          pointer++;\n        }\n        count_insert = 0;\n        count_delete = 0;\n        text_delete = \"\";\n        text_insert = \"\";\n        break;\n    }\n  }\n  if (diffs[diffs.length - 1][1] === \"\") {\n    diffs.pop(); // Remove the dummy entry at the end.\n  }\n\n  // Second pass: look for single edits surrounded on both sides by equalities\n  // which can be shifted sideways to eliminate an equality.\n  // e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC\n  var changes = false;\n  pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (\n      diffs[pointer - 1][0] === DIFF_EQUAL &&\n      diffs[pointer + 1][0] === DIFF_EQUAL\n    ) {\n      // This is a single edit surrounded by equalities.\n      if (\n        diffs[pointer][1].substring(\n          diffs[pointer][1].length - diffs[pointer - 1][1].length\n        ) === diffs[pointer - 1][1]\n      ) {\n        // Shift the edit over the previous equality.\n        diffs[pointer][1] =\n          diffs[pointer - 1][1] +\n          diffs[pointer][1].substring(\n            0,\n            diffs[pointer][1].length - diffs[pointer - 1][1].length\n          );\n        diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];\n        diffs.splice(pointer - 1, 1);\n        changes = true;\n      } else if (\n        diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) ==\n        diffs[pointer + 1][1]\n      ) {\n        // Shift the edit over the next equality.\n        diffs[pointer - 1][1] += diffs[pointer + 1][1];\n        diffs[pointer][1] =\n          diffs[pointer][1].substring(diffs[pointer + 1][1].length) +\n          diffs[pointer + 1][1];\n        diffs.splice(pointer + 1, 1);\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n  // If shifts were made, the diff needs reordering and another shift sweep.\n  if (changes) {\n    diff_cleanupMerge(diffs, fix_unicode);\n  }\n}\n\nfunction is_surrogate_pair_start(charCode) {\n  return charCode >= 0xd800 && charCode <= 0xdbff;\n}\n\nfunction is_surrogate_pair_end(charCode) {\n  return charCode >= 0xdc00 && charCode <= 0xdfff;\n}\n\nfunction starts_with_pair_end(str) {\n  return is_surrogate_pair_end(str.charCodeAt(0));\n}\n\nfunction ends_with_pair_start(str) {\n  return is_surrogate_pair_start(str.charCodeAt(str.length - 1));\n}\n\nfunction remove_empty_tuples(tuples) {\n  var ret = [];\n  for (var i = 0; i < tuples.length; i++) {\n    if (tuples[i][1].length > 0) {\n      ret.push(tuples[i]);\n    }\n  }\n  return ret;\n}\n\nfunction make_edit_splice(before, oldMiddle, newMiddle, after) {\n  if (ends_with_pair_start(before) || starts_with_pair_end(after)) {\n    return null;\n  }\n  return remove_empty_tuples([\n    [DIFF_EQUAL, before],\n    [DIFF_DELETE, oldMiddle],\n    [DIFF_INSERT, newMiddle],\n    [DIFF_EQUAL, after],\n  ]);\n}\n\nfunction find_cursor_edit_diff(oldText, newText, cursor_pos) {\n  // note: this runs after equality check has ruled out exact equality\n  var oldRange =\n    typeof cursor_pos === \"number\"\n      ? { index: cursor_pos, length: 0 }\n      : cursor_pos.oldRange;\n  var newRange = typeof cursor_pos === \"number\" ? null : cursor_pos.newRange;\n  // take into account the old and new selection to generate the best diff\n  // possible for a text edit.  for example, a text change from \"xxx\" to \"xx\"\n  // could be a delete or forwards-delete of any one of the x's, or the\n  // result of selecting two of the x's and typing \"x\".\n  var oldLength = oldText.length;\n  var newLength = newText.length;\n  if (oldRange.length === 0 && (newRange === null || newRange.length === 0)) {\n    // see if we have an insert or delete before or after cursor\n    var oldCursor = oldRange.index;\n    var oldBefore = oldText.slice(0, oldCursor);\n    var oldAfter = oldText.slice(oldCursor);\n    var maybeNewCursor = newRange ? newRange.index : null;\n    editBefore: {\n      // is this an insert or delete right before oldCursor?\n      var newCursor = oldCursor + newLength - oldLength;\n      if (maybeNewCursor !== null && maybeNewCursor !== newCursor) {\n        break editBefore;\n      }\n      if (newCursor < 0 || newCursor > newLength) {\n        break editBefore;\n      }\n      var newBefore = newText.slice(0, newCursor);\n      var newAfter = newText.slice(newCursor);\n      if (newAfter !== oldAfter) {\n        break editBefore;\n      }\n      var prefixLength = Math.min(oldCursor, newCursor);\n      var oldPrefix = oldBefore.slice(0, prefixLength);\n      var newPrefix = newBefore.slice(0, prefixLength);\n      if (oldPrefix !== newPrefix) {\n        break editBefore;\n      }\n      var oldMiddle = oldBefore.slice(prefixLength);\n      var newMiddle = newBefore.slice(prefixLength);\n      return make_edit_splice(oldPrefix, oldMiddle, newMiddle, oldAfter);\n    }\n    editAfter: {\n      // is this an insert or delete right after oldCursor?\n      if (maybeNewCursor !== null && maybeNewCursor !== oldCursor) {\n        break editAfter;\n      }\n      var cursor = oldCursor;\n      var newBefore = newText.slice(0, cursor);\n      var newAfter = newText.slice(cursor);\n      if (newBefore !== oldBefore) {\n        break editAfter;\n      }\n      var suffixLength = Math.min(oldLength - cursor, newLength - cursor);\n      var oldSuffix = oldAfter.slice(oldAfter.length - suffixLength);\n      var newSuffix = newAfter.slice(newAfter.length - suffixLength);\n      if (oldSuffix !== newSuffix) {\n        break editAfter;\n      }\n      var oldMiddle = oldAfter.slice(0, oldAfter.length - suffixLength);\n      var newMiddle = newAfter.slice(0, newAfter.length - suffixLength);\n      return make_edit_splice(oldBefore, oldMiddle, newMiddle, oldSuffix);\n    }\n  }\n  if (oldRange.length > 0 && newRange && newRange.length === 0) {\n    replaceRange: {\n      // see if diff could be a splice of the old selection range\n      var oldPrefix = oldText.slice(0, oldRange.index);\n      var oldSuffix = oldText.slice(oldRange.index + oldRange.length);\n      var prefixLength = oldPrefix.length;\n      var suffixLength = oldSuffix.length;\n      if (newLength < prefixLength + suffixLength) {\n        break replaceRange;\n      }\n      var newPrefix = newText.slice(0, prefixLength);\n      var newSuffix = newText.slice(newLength - suffixLength);\n      if (oldPrefix !== newPrefix || oldSuffix !== newSuffix) {\n        break replaceRange;\n      }\n      var oldMiddle = oldText.slice(prefixLength, oldLength - suffixLength);\n      var newMiddle = newText.slice(prefixLength, newLength - suffixLength);\n      return make_edit_splice(oldPrefix, oldMiddle, newMiddle, oldSuffix);\n    }\n  }\n\n  return null;\n}\n\nfunction diff(text1, text2, cursor_pos, cleanup) {\n  // only pass fix_unicode=true at the top level, not when diff_main is\n  // recursively invoked\n  return diff_main(text1, text2, cursor_pos, cleanup, true);\n}\n\ndiff.INSERT = DIFF_INSERT;\ndiff.DELETE = DIFF_DELETE;\ndiff.EQUAL = DIFF_EQUAL;\n\nmodule.exports = diff;\n", "const diff = require('fast-diff');\n\nconst LINE_ENDING_RE = /\\r\\n|[\\r\\n\\u2028\\u2029]/;\n\n/**\n * Converts invisible characters to a commonly recognizable visible form.\n * @param {string} str - The string with invisibles to convert.\n * @returns {string} The converted string.\n */\nfunction showInvisibles(str) {\n  let ret = '';\n  for (let i = 0; i < str.length; i++) {\n    switch (str[i]) {\n      case ' ':\n        ret += '·'; // Middle Dot, \\u00B7\n        break;\n      case '\\n':\n        ret += '⏎'; // Return Symbol, \\u23ce\n        break;\n      case '\\t':\n        ret += '↹'; // Left Arrow To Bar Over Right Arrow To Bar, \\u21b9\n        break;\n      case '\\r':\n        ret += '␍'; // Carriage Return Symbol, \\u240D\n        break;\n      default:\n        ret += str[i];\n        break;\n    }\n  }\n  return ret;\n}\n\n/**\n * Generate results for differences between source code and formatted version.\n *\n * @param {string} source - The original source.\n * @param {string} prettierSource - The Prettier formatted source.\n * @returns {Array} - An array containing { operation, offset, insertText, deleteText }\n */\nfunction generateDifferences(source, prettierSource) {\n  // fast-diff returns the differences between two texts as a series of\n  // INSERT, DELETE or EQUAL operations. The results occur only in these\n  // sequences:\n  //           /-> INSERT -> EQUAL\n  //    EQUAL |           /-> EQUAL\n  //           \\-> DELETE |\n  //                      \\-> INSERT -> EQUAL\n  // Instead of reporting issues at each INSERT or DELETE, certain sequences\n  // are batched together and are reported as a friendlier \"replace\" operation:\n  // - A DELETE immediately followed by an INSERT.\n  // - Any number of INSERTs and DELETEs where the joining EQUAL of one's end\n  // and another's beginning does not have line endings (i.e. issues that occur\n  // on contiguous lines).\n\n  const results = diff(source, prettierSource);\n  const differences = [];\n\n  const batch = [];\n  let offset = 0; // NOTE: INSERT never advances the offset.\n  while (results.length) {\n    const result = results.shift();\n    const op = result[0];\n    const text = result[1];\n    switch (op) {\n      case diff.INSERT:\n      case diff.DELETE:\n        batch.push(result);\n        break;\n      case diff.EQUAL:\n        if (results.length) {\n          if (batch.length) {\n            if (LINE_ENDING_RE.test(text)) {\n              flush();\n              offset += text.length;\n            } else {\n              batch.push(result);\n            }\n          } else {\n            offset += text.length;\n          }\n        }\n        break;\n      default:\n        throw new Error(`Unexpected fast-diff operation \"${op}\"`);\n    }\n    if (batch.length && !results.length) {\n      flush();\n    }\n  }\n\n  return differences;\n\n  function flush() {\n    let aheadDeleteText = '';\n    let aheadInsertText = '';\n    while (batch.length) {\n      const next = batch.shift();\n      const op = next[0];\n      const text = next[1];\n      switch (op) {\n        case diff.INSERT:\n          aheadInsertText += text;\n          break;\n        case diff.DELETE:\n          aheadDeleteText += text;\n          break;\n        case diff.EQUAL:\n          aheadDeleteText += text;\n          aheadInsertText += text;\n          break;\n      }\n    }\n    if (aheadDeleteText && aheadInsertText) {\n      differences.push({\n        offset,\n        operation: generateDifferences.REPLACE,\n        insertText: aheadInsertText,\n        deleteText: aheadDeleteText,\n      });\n    } else if (!aheadDeleteText && aheadInsertText) {\n      differences.push({\n        offset,\n        operation: generateDifferences.INSERT,\n        insertText: aheadInsertText,\n      });\n    } else if (aheadDeleteText && !aheadInsertText) {\n      differences.push({\n        offset,\n        operation: generateDifferences.DELETE,\n        deleteText: aheadDeleteText,\n      });\n    }\n    offset += aheadDeleteText.length;\n  }\n}\n\ngenerateDifferences.INSERT = 'insert';\ngenerateDifferences.DELETE = 'delete';\ngenerateDifferences.REPLACE = 'replace';\n\nmodule.exports = {\n  showInvisibles,\n  generateDifferences,\n};\n", "{\n  \"name\": \"eslint-plugin-prettier\",\n  \"version\": \"5.1.3\",\n  \"description\": \"Runs prettier as an eslint rule\",\n  \"repository\": \"git+https://github.com/prettier/eslint-plugin-prettier.git\",\n  \"homepage\": \"https://github.com/prettier/eslint-plugin-prettier#readme\",\n  \"author\": \"Teddy Katz\",\n  \"contributors\": [\n    \"JounQin (https://github.com/JounQin) <admin@1stg.me>\"\n  ],\n  \"funding\": \"https://opencollective.com/eslint-plugin-prettier\",\n  \"license\": \"MIT\",\n  \"packageManager\": \"pnpm@7.33.5\",\n  \"engines\": {\n    \"node\": \"^14.18.0 || >=16.0.0\"\n  },\n  \"main\": \"eslint-plugin-prettier.js\",\n  \"exports\": {\n    \".\": {\n      \"types\": \"./eslint-plugin-prettier.d.ts\",\n      \"default\": \"./eslint-plugin-prettier.js\"\n    },\n    \"./recommended\": {\n      \"types\": \"./recommended.d.ts\",\n      \"default\": \"./recommended.js\"\n    },\n    \"./package.json\": \"./package.json\"\n  },\n  \"types\": \"eslint-plugin-prettier.d.ts\",\n  \"files\": [\n    \"eslint-plugin-prettier.d.ts\",\n    \"eslint-plugin-prettier.js\",\n    \"recommended.d.ts\",\n    \"recommended.js\",\n    \"worker.js\"\n  ],\n  \"keywords\": [\n    \"eslint\",\n    \"eslintplugin\",\n    \"eslint-plugin\",\n    \"prettier\"\n  ],\n  \"peerDependencies\": {\n    \"@types/eslint\": \">=8.0.0\",\n    \"eslint\": \">=8.0.0\",\n    \"eslint-config-prettier\": \"*\",\n    \"prettier\": \">=3.0.0\"\n  },\n  \"peerDependenciesMeta\": {\n    \"@types/eslint\": {\n      \"optional\": true\n    },\n    \"eslint-config-prettier\": {\n      \"optional\": true\n    }\n  },\n  \"dependencies\": {\n    \"prettier-linter-helpers\": \"^1.0.0\",\n    \"synckit\": \"^0.8.6\"\n  },\n  \"devDependencies\": {\n    \"@1stg/remark-preset\": \"^2.0.0\",\n    \"@changesets/changelog-github\": \"^0.5.0\",\n    \"@changesets/cli\": \"^2.27.1\",\n    \"@commitlint/config-conventional\": \"^18.4.3\",\n    \"@eslint-community/eslint-plugin-eslint-comments\": \"^4.1.0\",\n    \"@eslint/js\": \"^8.56.0\",\n    \"@graphql-eslint/eslint-plugin\": \"^3.20.1\",\n    \"@prettier/plugin-pug\": \"^3.0.0\",\n    \"@types/eslint\": \"^8.56.0\",\n    \"@types/prettier-linter-helpers\": \"^1.0.4\",\n    \"commitlint\": \"^18.4.3\",\n    \"eslint\": \"^8.56.0\",\n    \"eslint-config-prettier\": \"^9.1.0\",\n    \"eslint-formatter-friendly\": \"^7.0.0\",\n    \"eslint-mdx\": \"^2.3.0\",\n    \"eslint-plugin-eslint-plugin\": \"^5.2.1\",\n    \"eslint-plugin-mdx\": \"^2.3.0\",\n    \"eslint-plugin-n\": \"^16.5.0\",\n    \"eslint-plugin-prettier\": \"link:.\",\n    \"eslint-plugin-pug\": \"^1.2.5\",\n    \"eslint-plugin-svelte\": \"^2.35.1\",\n    \"eslint-plugin-svelte3\": \"^4.0.0\",\n    \"graphql\": \"^16.8.1\",\n    \"lint-staged\": \"^15.2.0\",\n    \"mocha\": \"^10.2.0\",\n    \"prettier\": \"^3.1.1\",\n    \"prettier-plugin-pkg\": \"^0.18.0\",\n    \"prettier-plugin-svelte\": \"^3.1.2\",\n    \"simple-git-hooks\": \"^2.9.0\",\n    \"svelte\": \"^4.2.8\",\n    \"vue-eslint-parser\": \"^9.3.2\"\n  },\n  \"scripts\": {\n    \"check\": \"prettier --check . && pnpm lint\",\n    \"format\": \"prettier --write . && pnpm lint --fix\",\n    \"lint\": \"eslint . --cache -f friendly --max-warnings 10\",\n    \"release\": \"pnpm check && pnpm test && changeset publish\",\n    \"test\": \"pnpm lint && mocha\"\n  }\n}", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"node:crypto\" has been externalized for browser compatibility. Cannot access \"node:crypto.${key}\" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"node:fs\" has been externalized for browser compatibility. Cannot access \"node:fs.${key}\" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"node:module\" has been externalized for browser compatibility. Cannot access \"node:module.${key}\" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"node:path\" has been externalized for browser compatibility. Cannot access \"node:path.${key}\" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"node:url\" has been externalized for browser compatibility. Cannot access \"node:url.${key}\" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"node:worker_threads\" has been externalized for browser compatibility. Cannot access \"node:worker_threads.${key}\" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "'use strict';\n\nvar node_module = require('node:module');\nvar fs = require('node:fs');\nvar path = require('node:path');\n\nconst import_meta = {};\nconst CWD = process.cwd();\nconst cjsRequire = typeof require === \"undefined\" ? node_module.createRequire(import_meta.url) : require;\nconst EXTENSIONS = [\".ts\", \".tsx\", ...Object.keys(cjsRequire.extensions)];\n\nconst tryPkg = (pkg) => {\n  try {\n    return cjsRequire.resolve(pkg);\n  } catch (e) {\n  }\n};\nconst isPkgAvailable = (pkg) => !!tryPkg(pkg);\nconst tryFile = (filePath, includeDir = false) => {\n  if (typeof filePath === \"string\") {\n    return fs.existsSync(filePath) && (includeDir || fs.statSync(filePath).isFile()) ? filePath : \"\";\n  }\n  for (const file of filePath != null ? filePath : []) {\n    if (tryFile(file, includeDir)) {\n      return file;\n    }\n  }\n  return \"\";\n};\nconst tryExtensions = (filepath, extensions = EXTENSIONS) => {\n  const ext = [...extensions, \"\"].find((ext2) => tryFile(filepath + ext2));\n  return ext == null ? \"\" : filepath + ext;\n};\nconst findUp = (searchEntry, searchFileOrIncludeDir, includeDir) => {\n  console.assert(path.isAbsolute(searchEntry));\n  if (!tryFile(searchEntry, true) || searchEntry !== CWD && !searchEntry.startsWith(CWD + path.sep)) {\n    return \"\";\n  }\n  searchEntry = path.resolve(\n    fs.statSync(searchEntry).isDirectory() ? searchEntry : path.resolve(searchEntry, \"..\")\n  );\n  const isSearchFile = typeof searchFileOrIncludeDir === \"string\";\n  const searchFile = isSearchFile ? searchFileOrIncludeDir : \"package.json\";\n  do {\n    const searched = tryFile(\n      path.resolve(searchEntry, searchFile),\n      isSearchFile && includeDir\n    );\n    if (searched) {\n      return searched;\n    }\n    searchEntry = path.resolve(searchEntry, \"..\");\n  } while (searchEntry === CWD || searchEntry.startsWith(CWD + path.sep));\n  return \"\";\n};\n\nexports.CWD = CWD;\nexports.EXTENSIONS = EXTENSIONS;\nexports.cjsRequire = cjsRequire;\nexports.findUp = findUp;\nexports.isPkgAvailable = isPkgAvailable;\nexports.tryExtensions = tryExtensions;\nexports.tryFile = tryFile;\nexports.tryPkg = tryPkg;\n", "'use strict';\n\nvar node_crypto = require('node:crypto');\nvar fs = require('node:fs');\nvar node_module = require('node:module');\nvar path = require('node:path');\nvar node_url = require('node:url');\nvar node_worker_threads = require('node:worker_threads');\nvar core = require('@pkgr/core');\n\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\nconst import_meta = {};\nconst TsRunner = {\n  // https://github.com/TypeStrong/ts-node\n  TsNode: \"ts-node\",\n  // https://github.com/egoist/esbuild-register\n  EsbuildRegister: \"esbuild-register\",\n  // https://github.com/folke/esbuild-runner\n  EsbuildRunner: \"esbuild-runner\",\n  // https://github.com/swc-project/swc-node/tree/master/packages/register\n  SWC: \"swc\",\n  // https://github.com/esbuild-kit/tsx\n  TSX: \"tsx\"\n};\nconst {\n  SYNCKIT_BUFFER_SIZE,\n  SYNCKIT_TIMEOUT,\n  SYNCKIT_EXEC_ARGV,\n  SYNCKIT_TS_RUNNER,\n  SYNCKIT_GLOBAL_SHIMS,\n  NODE_OPTIONS\n} = process.env;\nconst DEFAULT_BUFFER_SIZE = SYNCKIT_BUFFER_SIZE ? +SYNCKIT_BUFFER_SIZE : void 0;\nconst DEFAULT_TIMEOUT = SYNCKIT_TIMEOUT ? +SYNCKIT_TIMEOUT : void 0;\nconst DEFAULT_WORKER_BUFFER_SIZE = DEFAULT_BUFFER_SIZE || 1024;\nconst DEFAULT_EXEC_ARGV = (SYNCKIT_EXEC_ARGV == null ? void 0 : SYNCKIT_EXEC_ARGV.split(\",\")) || [];\nconst DEFAULT_TS_RUNNER = SYNCKIT_TS_RUNNER;\nconst DEFAULT_GLOBAL_SHIMS = [\"1\", \"true\"].includes(\n  SYNCKIT_GLOBAL_SHIMS\n);\nconst DEFAULT_GLOBAL_SHIMS_PRESET = [\n  {\n    moduleName: \"node-fetch\",\n    globalName: \"fetch\"\n  },\n  {\n    moduleName: \"node:perf_hooks\",\n    globalName: \"performance\",\n    named: \"performance\"\n  }\n];\nconst MTS_SUPPORTED_NODE_VERSION = 16;\nconst syncFnCache = /* @__PURE__ */ new Map();\nfunction extractProperties(object) {\n  if (object && typeof object === \"object\") {\n    const properties = {};\n    for (const key in object) {\n      properties[key] = object[key];\n    }\n    return properties;\n  }\n}\nfunction createSyncFn(workerPath, bufferSizeOrOptions, timeout) {\n  if (!path.isAbsolute(workerPath)) {\n    throw new Error(\"`workerPath` must be absolute\");\n  }\n  const cachedSyncFn = syncFnCache.get(workerPath);\n  if (cachedSyncFn) {\n    return cachedSyncFn;\n  }\n  const syncFn = startWorkerThread(\n    workerPath,\n    /* istanbul ignore next */\n    typeof bufferSizeOrOptions === \"number\" ? { bufferSize: bufferSizeOrOptions, timeout } : bufferSizeOrOptions\n  );\n  syncFnCache.set(workerPath, syncFn);\n  return syncFn;\n}\nconst cjsRequire = typeof require === \"undefined\" ? node_module.createRequire(import_meta.url) : (\n  /* istanbul ignore next */\n  require\n);\nconst dataUrl = (code) => new URL(`data:text/javascript,${encodeURIComponent(code)}`);\nconst isFile = (path2) => {\n  var _a;\n  try {\n    return !!((_a = fs.statSync(path2, { throwIfNoEntry: false })) == null ? void 0 : _a.isFile());\n  } catch (e) {\n    return false;\n  }\n};\nconst setupTsRunner = (workerPath, { execArgv, tsRunner }) => {\n  let ext = path.extname(workerPath);\n  if (!/[/\\\\]node_modules[/\\\\]/.test(workerPath) && (!ext || /^\\.[cm]?js$/.test(ext))) {\n    const workPathWithoutExt = ext ? workerPath.slice(0, -ext.length) : workerPath;\n    let extensions;\n    switch (ext) {\n      case \".cjs\": {\n        extensions = [\".cts\", \".cjs\"];\n        break;\n      }\n      case \".mjs\": {\n        extensions = [\".mts\", \".mjs\"];\n        break;\n      }\n      default: {\n        extensions = [\".ts\", \".js\"];\n        break;\n      }\n    }\n    const found = core.tryExtensions(workPathWithoutExt, extensions);\n    let differentExt;\n    if (found && (!ext || (differentExt = found !== workPathWithoutExt))) {\n      workerPath = found;\n      if (differentExt) {\n        ext = path.extname(workerPath);\n      }\n    }\n  }\n  const isTs = /\\.[cm]?ts$/.test(workerPath);\n  let jsUseEsm = workerPath.endsWith(\".mjs\");\n  let tsUseEsm = workerPath.endsWith(\".mts\");\n  if (isTs) {\n    if (!tsUseEsm) {\n      const pkg = core.findUp(workerPath);\n      if (pkg) {\n        tsUseEsm = cjsRequire(pkg).type === \"module\";\n      }\n    }\n    if (tsRunner == null && core.isPkgAvailable(TsRunner.TsNode)) {\n      tsRunner = TsRunner.TsNode;\n    }\n    switch (tsRunner) {\n      case TsRunner.TsNode: {\n        if (tsUseEsm) {\n          if (!execArgv.includes(\"--loader\")) {\n            execArgv = [\"--loader\", `${TsRunner.TsNode}/esm`, ...execArgv];\n          }\n        } else if (!execArgv.includes(\"-r\")) {\n          execArgv = [\"-r\", `${TsRunner.TsNode}/register`, ...execArgv];\n        }\n        break;\n      }\n      case TsRunner.EsbuildRegister: {\n        if (!execArgv.includes(\"-r\")) {\n          execArgv = [\"-r\", TsRunner.EsbuildRegister, ...execArgv];\n        }\n        break;\n      }\n      case TsRunner.EsbuildRunner: {\n        if (!execArgv.includes(\"-r\")) {\n          execArgv = [\"-r\", `${TsRunner.EsbuildRunner}/register`, ...execArgv];\n        }\n        break;\n      }\n      case TsRunner.SWC: {\n        if (!execArgv.includes(\"-r\")) {\n          execArgv = [\"-r\", `@${TsRunner.SWC}-node/register`, ...execArgv];\n        }\n        break;\n      }\n      case TsRunner.TSX: {\n        if (!execArgv.includes(\"--loader\")) {\n          execArgv = [\"--loader\", TsRunner.TSX, ...execArgv];\n        }\n        break;\n      }\n      default: {\n        throw new Error(`Unknown ts runner: ${String(tsRunner)}`);\n      }\n    }\n  } else if (!jsUseEsm) {\n    const pkg = core.findUp(workerPath);\n    if (pkg) {\n      jsUseEsm = cjsRequire(pkg).type === \"module\";\n    }\n  }\n  if (process.versions.pnp) {\n    const nodeOptions = NODE_OPTIONS == null ? void 0 : NODE_OPTIONS.split(/\\s+/);\n    let pnpApiPath;\n    try {\n      pnpApiPath = cjsRequire.resolve(\"pnpapi\");\n    } catch (e) {\n    }\n    if (pnpApiPath && !(nodeOptions == null ? void 0 : nodeOptions.some(\n      (option, index) => [\"-r\", \"--require\"].includes(option) && pnpApiPath === cjsRequire.resolve(nodeOptions[index + 1])\n    )) && !execArgv.includes(pnpApiPath)) {\n      execArgv = [\"-r\", pnpApiPath, ...execArgv];\n      const pnpLoaderPath = path.resolve(pnpApiPath, \"../.pnp.loader.mjs\");\n      if (isFile(pnpLoaderPath)) {\n        const experimentalLoader = node_url.pathToFileURL(pnpLoaderPath).toString();\n        execArgv = [\"--experimental-loader\", experimentalLoader, ...execArgv];\n      }\n    }\n  }\n  return {\n    ext,\n    isTs,\n    jsUseEsm,\n    tsRunner,\n    tsUseEsm,\n    workerPath,\n    execArgv\n  };\n};\nconst md5Hash = (text) => node_crypto.createHash(\"md5\").update(text).digest(\"hex\");\nconst encodeImportModule = (moduleNameOrGlobalShim, type = \"import\") => {\n  const { moduleName, globalName, named, conditional } = typeof moduleNameOrGlobalShim === \"string\" ? { moduleName: moduleNameOrGlobalShim } : moduleNameOrGlobalShim;\n  const importStatement = type === \"import\" ? `import${globalName ? \" \" + (named === null ? \"* as \" + globalName : (named == null ? void 0 : named.trim()) ? `{${named}}` : globalName) + \" from\" : \"\"} '${path.isAbsolute(moduleName) ? String(node_url.pathToFileURL(moduleName)) : moduleName}'` : `${globalName ? \"const \" + ((named == null ? void 0 : named.trim()) ? `{${named}}` : globalName) + \"=\" : \"\"}require('${moduleName.replace(/\\\\/g, \"\\\\\\\\\")}')`;\n  if (!globalName) {\n    return importStatement;\n  }\n  const overrideStatement = `globalThis.${globalName}=${(named == null ? void 0 : named.trim()) ? named : globalName}`;\n  return importStatement + (conditional === false ? `;${overrideStatement}` : `;if(!globalThis.${globalName})${overrideStatement}`);\n};\nconst _generateGlobals = (globalShims, type) => globalShims.reduce(\n  (acc, shim) => `${acc}${acc ? \";\" : \"\"}${encodeImportModule(shim, type)}`,\n  \"\"\n);\nconst globalsCache = /* @__PURE__ */ new Map();\nlet tmpdir;\nconst _dirname = typeof __dirname === \"undefined\" ? path.dirname(node_url.fileURLToPath(import_meta.url)) : (\n  /* istanbul ignore next */\n  __dirname\n);\nconst generateGlobals = (workerPath, globalShims, type = \"import\") => {\n  const cached = globalsCache.get(workerPath);\n  if (cached) {\n    const [content2, filepath2] = cached;\n    if (type === \"require\" && !filepath2 || type === \"import\" && filepath2 && isFile(filepath2)) {\n      return content2;\n    }\n  }\n  const globals = _generateGlobals(globalShims, type);\n  let content = globals;\n  let filepath;\n  if (type === \"import\") {\n    if (!tmpdir) {\n      tmpdir = path.resolve(core.findUp(_dirname), \"../node_modules/.synckit\");\n    }\n    fs.mkdirSync(tmpdir, { recursive: true });\n    filepath = path.resolve(tmpdir, md5Hash(workerPath) + \".mjs\");\n    content = encodeImportModule(filepath);\n    fs.writeFileSync(filepath, globals);\n  }\n  globalsCache.set(workerPath, [content, filepath]);\n  return content;\n};\nfunction startWorkerThread(workerPath, {\n  bufferSize = DEFAULT_WORKER_BUFFER_SIZE,\n  timeout = DEFAULT_TIMEOUT,\n  execArgv = DEFAULT_EXEC_ARGV,\n  tsRunner = DEFAULT_TS_RUNNER,\n  transferList = [],\n  globalShims = DEFAULT_GLOBAL_SHIMS\n} = {}) {\n  const { port1: mainPort, port2: workerPort } = new node_worker_threads.MessageChannel();\n  const {\n    isTs,\n    ext,\n    jsUseEsm,\n    tsUseEsm,\n    tsRunner: finalTsRunner,\n    workerPath: finalWorkerPath,\n    execArgv: finalExecArgv\n  } = setupTsRunner(workerPath, { execArgv, tsRunner });\n  const workerPathUrl = node_url.pathToFileURL(finalWorkerPath);\n  if (/\\.[cm]ts$/.test(finalWorkerPath)) {\n    const isTsxSupported = !tsUseEsm || Number.parseFloat(process.versions.node) >= MTS_SUPPORTED_NODE_VERSION;\n    if (!finalTsRunner) {\n      throw new Error(\"No ts runner specified, ts worker path is not supported\");\n    } else if ([\n      // https://github.com/egoist/esbuild-register/issues/79\n      TsRunner.EsbuildRegister,\n      // https://github.com/folke/esbuild-runner/issues/67\n      TsRunner.EsbuildRunner,\n      // https://github.com/swc-project/swc-node/issues/667\n      TsRunner.SWC,\n      .../* istanbul ignore next */\n      isTsxSupported ? [] : [TsRunner.TSX]\n    ].includes(finalTsRunner)) {\n      throw new Error(\n        `${finalTsRunner} is not supported for ${ext} files yet` + /* istanbul ignore next */\n        (isTsxSupported ? \", you can try [tsx](https://github.com/esbuild-kit/tsx) instead\" : \"\")\n      );\n    }\n  }\n  const finalGlobalShims = (globalShims === true ? DEFAULT_GLOBAL_SHIMS_PRESET : Array.isArray(globalShims) ? globalShims : []).filter(({ moduleName }) => core.isPkgAvailable(moduleName));\n  const useGlobals = finalGlobalShims.length > 0;\n  const useEval = isTs ? !tsUseEsm : !jsUseEsm && useGlobals;\n  const worker = new node_worker_threads.Worker(\n    jsUseEsm && useGlobals || tsUseEsm && finalTsRunner === TsRunner.TsNode ? dataUrl(\n      `${generateGlobals(\n        finalWorkerPath,\n        finalGlobalShims\n      )};import '${String(workerPathUrl)}'`\n    ) : useEval ? `${generateGlobals(\n      finalWorkerPath,\n      finalGlobalShims,\n      \"require\"\n    )};${encodeImportModule(finalWorkerPath, \"require\")}` : workerPathUrl,\n    {\n      eval: useEval,\n      workerData: { workerPort },\n      transferList: [workerPort, ...transferList],\n      execArgv: finalExecArgv\n    }\n  );\n  let nextID = 0;\n  const syncFn = (...args) => {\n    const id = nextID++;\n    const sharedBuffer = new SharedArrayBuffer(bufferSize);\n    const sharedBufferView = new Int32Array(sharedBuffer);\n    const msg = { sharedBuffer, id, args };\n    worker.postMessage(msg);\n    const status = Atomics.wait(sharedBufferView, 0, 0, timeout);\n    if (![\"ok\", \"not-equal\"].includes(status)) {\n      throw new Error(\"Internal error: Atomics.wait() failed: \" + status);\n    }\n    const {\n      id: id2,\n      result,\n      error,\n      properties\n    } = node_worker_threads.receiveMessageOnPort(mainPort).message;\n    if (id !== id2) {\n      throw new Error(`Internal error: Expected id ${id} but got id ${id2}`);\n    }\n    if (error) {\n      throw Object.assign(error, properties);\n    }\n    return result;\n  };\n  worker.unref();\n  return syncFn;\n}\nfunction runAsWorker(fn) {\n  if (!node_worker_threads.workerData) {\n    return;\n  }\n  const { workerPort } = node_worker_threads.workerData;\n  node_worker_threads.parentPort.on(\n    \"message\",\n    ({ sharedBuffer, id, args }) => {\n      (() => __async(this, null, function* () {\n        const sharedBufferView = new Int32Array(sharedBuffer);\n        let msg;\n        try {\n          msg = { id, result: yield fn(...args) };\n        } catch (error) {\n          msg = { id, error, properties: extractProperties(error) };\n        }\n        workerPort.postMessage(msg);\n        Atomics.add(sharedBufferView, 0, 1);\n        Atomics.notify(sharedBufferView, 0);\n      }))();\n    }\n  );\n}\n\nexports.DEFAULT_BUFFER_SIZE = DEFAULT_BUFFER_SIZE;\nexports.DEFAULT_EXEC_ARGV = DEFAULT_EXEC_ARGV;\nexports.DEFAULT_GLOBAL_SHIMS = DEFAULT_GLOBAL_SHIMS;\nexports.DEFAULT_GLOBAL_SHIMS_PRESET = DEFAULT_GLOBAL_SHIMS_PRESET;\nexports.DEFAULT_TIMEOUT = DEFAULT_TIMEOUT;\nexports.DEFAULT_TS_RUNNER = DEFAULT_TS_RUNNER;\nexports.DEFAULT_WORKER_BUFFER_SIZE = DEFAULT_WORKER_BUFFER_SIZE;\nexports.MTS_SUPPORTED_NODE_VERSION = MTS_SUPPORTED_NODE_VERSION;\nexports.TsRunner = TsRunner;\nexports._generateGlobals = _generateGlobals;\nexports.createSyncFn = createSyncFn;\nexports.encodeImportModule = encodeImportModule;\nexports.extractProperties = extractProperties;\nexports.generateGlobals = generateGlobals;\nexports.isFile = isFile;\nexports.runAsWorker = runAsWorker;\n", "/**\n * @file Runs `prettier` as an ESLint rule.\n * @author Andres Suarez\n */\n\n// @ts-check\n\n/**\n * @typedef {import('eslint').AST.Range} Range\n * @typedef {import('eslint').AST.SourceLocation} SourceLocation\n * @typedef {import('eslint').ESLint.Plugin} Plugin\n * @typedef {import('eslint').ESLint.ObjectMetaProperties} ObjectMetaProperties\n * @typedef {import('prettier').FileInfoOptions} FileInfoOptions\n * @typedef {import('prettier').Options} PrettierOptions\n * @typedef {PrettierOptions & { onDiskFilepath: string, parserMeta?: ObjectMetaProperties['meta'], parserPath?: string, usePrettierrc?: boolean }} Options\n */\n\n'use strict';\n\n// ------------------------------------------------------------------------------\n//  Requirements\n// ------------------------------------------------------------------------------\n\nconst {\n  showInvisibles,\n  generateDifferences,\n} = require('prettier-linter-helpers');\nconst { name, version } = require('./package.json');\n\n// ------------------------------------------------------------------------------\n//  Constants\n// ------------------------------------------------------------------------------\n\nconst { INSERT, DELETE, REPLACE } = generateDifferences;\n\n// ------------------------------------------------------------------------------\n//  Privates\n// ------------------------------------------------------------------------------\n\n// Lazily-loaded Prettier.\n/**\n * @type {(source: string, options: Options, fileInfoOptions: FileInfoOptions) => string}\n */\nlet prettierFormat;\n\n// ------------------------------------------------------------------------------\n//  Rule Definition\n// ------------------------------------------------------------------------------\n\n/**\n * Reports a difference.\n *\n * @param {import('eslint').Rule.RuleContext} context - The ESLint rule context.\n * @param {import('prettier-linter-helpers').Difference} difference - The difference object.\n * @returns {void}\n */\nfunction reportDifference(context, difference) {\n  const { operation, offset, deleteText = '', insertText = '' } = difference;\n  const range = /** @type {Range} */ ([offset, offset + deleteText.length]);\n  // `context.getSourceCode()` was deprecated in ESLint v8.40.0 and replaced\n  // with the `sourceCode` property.\n  // TODO: Only use property when our eslint peerDependency is >=8.40.0.\n  const [start, end] = range.map(index =>\n    (context.sourceCode ?? context.getSourceCode()).getLocFromIndex(index),\n  );\n\n  context.report({\n    messageId: operation,\n    data: {\n      deleteText: showInvisibles(deleteText),\n      insertText: showInvisibles(insertText),\n    },\n    loc: { start, end },\n    fix: fixer => fixer.replaceTextRange(range, insertText),\n  });\n}\n\n// ------------------------------------------------------------------------------\n//  Module Definition\n// ------------------------------------------------------------------------------\n\n/**\n * @type {Plugin}\n */\nconst eslintPluginPrettier = {\n  meta: { name, version },\n  configs: {\n    recommended: {\n      extends: ['prettier'],\n      plugins: ['prettier'],\n      rules: {\n        'prettier/prettier': 'error',\n        'arrow-body-style': 'off',\n        'prefer-arrow-callback': 'off',\n      },\n    },\n  },\n  rules: {\n    prettier: {\n      meta: {\n        docs: {\n          url: 'https://github.com/prettier/eslint-plugin-prettier#options',\n        },\n        type: 'layout',\n        fixable: 'code',\n        schema: [\n          // Prettier options:\n          {\n            type: 'object',\n            properties: {},\n            additionalProperties: true,\n          },\n          {\n            type: 'object',\n            properties: {\n              usePrettierrc: { type: 'boolean' },\n              fileInfoOptions: {\n                type: 'object',\n                properties: {},\n                additionalProperties: true,\n              },\n            },\n            additionalProperties: true,\n          },\n        ],\n        messages: {\n          [INSERT]: 'Insert `{{ insertText }}`',\n          [DELETE]: 'Delete `{{ deleteText }}`',\n          [REPLACE]: 'Replace `{{ deleteText }}` with `{{ insertText }}`',\n        },\n      },\n      create(context) {\n        const usePrettierrc =\n          !context.options[1] || context.options[1].usePrettierrc !== false;\n        /**\n         * @type {FileInfoOptions}\n         */\n        const fileInfoOptions =\n          (context.options[1] && context.options[1].fileInfoOptions) || {};\n\n        // `context.getSourceCode()` was deprecated in ESLint v8.40.0 and replaced\n        // with the `sourceCode` property.\n        // TODO: Only use property when our eslint peerDependency is >=8.40.0.\n        const sourceCode = context.sourceCode ?? context.getSourceCode();\n        // `context.getFilename()` was deprecated in ESLint v8.40.0 and replaced\n        // with the `filename` property.\n        // TODO: Only use property when our eslint peerDependency is >=8.40.0.\n        const filepath = context.filename ?? context.getFilename();\n\n        // Processors that extract content from a file, such as the markdown\n        // plugin extracting fenced code blocks may choose to specify virtual\n        // file paths. If this is the case then we need to resolve prettier\n        // config and file info using the on-disk path instead of the virtual\n        // path.\n        // `context.getPhysicalFilename()` was deprecated in ESLint v8.40.0 and replaced\n        // with the `physicalFilename` property.\n        // TODO: Only use property when our eslint peerDependency is >=8.40.0.\n        const onDiskFilepath =\n          context.physicalFilename ?? context.getPhysicalFilename();\n        const source = sourceCode.text;\n\n        return {\n          Program() {\n            if (!prettierFormat) {\n              // Prettier is expensive to load, so only load it if needed.\n              prettierFormat = require('synckit').createSyncFn(\n                require.resolve('./worker'),\n              );\n            }\n\n            /**\n             * @type {PrettierOptions}\n             */\n            const eslintPrettierOptions = context.options[0] || {};\n\n            const parser = context.languageOptions?.parser;\n\n            // prettier.format() may throw a SyntaxError if it cannot parse the\n            // source code it is given. Usually for JS files this isn't a\n            // problem as ESLint will report invalid syntax before trying to\n            // pass it to the prettier plugin. However this might be a problem\n            // for non-JS languages that are handled by a plugin. Notably Vue\n            // files throw an error if they contain unclosed elements, such as\n            // `<template><div></template>. In this case report an error at the\n            // point at which parsing failed.\n            /**\n             * @type {string}\n             */\n            let prettierSource;\n            try {\n              prettierSource = prettierFormat(\n                source,\n                {\n                  ...eslintPrettierOptions,\n                  filepath,\n                  onDiskFilepath,\n                  parserMeta:\n                    parser &&\n                    (parser.meta ?? {\n                      name: parser.name,\n                      version: parser.version,\n                    }),\n                  parserPath: context.parserPath,\n                  usePrettierrc,\n                },\n                fileInfoOptions,\n              );\n            } catch (err) {\n              if (!(err instanceof SyntaxError)) {\n                throw err;\n              }\n\n              let message = 'Parsing error: ' + err.message;\n\n              const error =\n                /** @type {SyntaxError & {codeFrame: string; loc: SourceLocation}} */ (\n                  err\n                );\n\n              // Prettier's message contains a codeframe style preview of the\n              // invalid code and the line/column at which the error occurred.\n              // ESLint shows those pieces of information elsewhere already so\n              // remove them from the message\n              if (error.codeFrame) {\n                message = message.replace(`\\n${error.codeFrame}`, '');\n              }\n              if (error.loc) {\n                message = message.replace(/ \\(\\d+:\\d+\\)$/, '');\n              }\n\n              context.report({ message, loc: error.loc });\n\n              return;\n            }\n\n            if (prettierSource == null) {\n              return;\n            }\n\n            if (source !== prettierSource) {\n              const differences = generateDifferences(source, prettierSource);\n\n              for (const difference of differences) {\n                reportDifference(context, difference);\n              }\n            }\n          },\n        };\n      },\n    },\n  },\n};\n\nmodule.exports = eslintPluginPrettier;\n"],
  "mappings": "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",
  "names": ["longtext", "shorttext", "require_lib"]
}
